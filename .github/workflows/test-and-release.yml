---
name: Test & Release

on: workflow_dispatch

jobs:
  pre-commit:
    name: run pre-commit hook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  test:
    name: run tox tests
    runs-on: ubuntu-latest
    steps:
      - name: Install krb5-config libvirt-dev  # missing distro dependencies
        run: sudo apt update && sudo apt-get install libkrb5-dev libvirt-dev
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Tox and any other packages
        run: pip install tox
      - name: Run Tox
        run: tox -e py

  release:
    name: mrack semantic release
    runs-on: ubuntu-latest
    needs: [pre-commit, test]
    if: github.repository == 'neoave/mrack'
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Display Python version
        run: python --version
      - name: Set up changelog date to use later
        run: echo "TODAY=`date "+%a %b %d %Y"`" >> ${GITHUB_ENV}
      - name: Set RELEASE_ACTOR
        env:
          RELEASE_ACTOR_TIBORIS: ${{ secrets.RELEASE_ACTOR_TIBORIS }}
          RELEASE_ACTOR_DAV_PASCUAL: ${{ secrets.RELEASE_ACTOR_DAV_PASCUAL }}
          RELEASE_ACTOR_PVOBORNI: ${{ secrets.RELEASE_ACTOR_PVOBORNI }}
          RELEASE_ACTOR_KALEEMSIDDIQU: ${{ secrets.RELEASE_ACTOR_KALEEMSIDDIQU }}
        run: |
          RELEASE_ACTOR=RELEASE_ACTOR_$(echo ${GITHUB_ACTOR^^} | tr - _)
          echo "RELEASE_ACTOR=${!RELEASE_ACTOR}" >> ${GITHUB_ENV}
      - uses: actions/checkout@v3
        with:
          persist-credentials: false  # do not set the actions user to git config
          fetch-depth: 0
      - name: Get the new version using python-semantic-release
        run: |
          pip3 install python-semantic-release==7.34.4
          echo "NEW_VERSION="`semantic-release print-version --noop` >> ${GITHUB_ENV}
      - name: Update the mrack.spec changelog with initiator and basic message
        run: |
          # get the history of commits and generate changelog from it
          git log  --pretty=format:"- %h %s (%cn)" $(git describe --tags --abbrev=0)..HEAD > changelog_changes
          # add newline after generated changelog for changelog sections to be visually separated
          echo -e "\n" >> changelog_changes
          echo "============NEW CHANGELOG================="
          cat changelog_changes
          echo "=========================================="
          # write changelog to mrack.spec
          sed -i '/%changelog/r changelog_changes' mrack.spec
          # write header of changelog to mrack.spec
          sed -ri \
          "s/\%changelog/\%changelog\\n\*\ $TODAY\ $RELEASE_ACTOR\ -\ $NEW_VERSION-1/" \
          mrack.spec
      - name: Add specfile to commit
        run: git add mrack.spec
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@v7.34.4
        with:
          github_token: ${{ secrets.TIBORIS_GH_TOKEN }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}
      - name: Trigger COPR build
        run: curl -X POST ${{ secrets.COPR_WEBHOOK_URL }}
